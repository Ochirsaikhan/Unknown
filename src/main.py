#!/usr/bin/env python
# Imports the necessary modules.
from PIL import Image, ImageDraw, ImageFont
import os
import json
import markovify

# Prepares the markovify model.
file = open("../data/quotes.txt")
model = markovify.NewlineText(file)

# Opens the image file
image = Image.open("../data/greek.jpg")
size = 1080, 1080

# Prepares the copy of the image and make a thumbnail the size of 1080x1080.
text_image = image.copy()
text_image.thumbnail(size)

# Makes the image draw object.
draw = ImageDraw.Draw(text_image)

# A function that returns a three line quote generated by markovify
# the return will be a string joined by the new line character. 
def make_quote():
    quotes = []
    for i in range(3):
        quotes.append(model.make_short_sentence(100))
    quote = "\n".join(quotes)
    return quote

# Stores the quote in "quote" variable.
quote = make_quote()

# A function that returns the font size based on text width.
def make_font(img, text):
    # Set up basic information to load type
    font_size = 1
    face = "../data/DeliusSwashCaps-Regular.ttf"
    font = ImageFont.truetype(face)

    # Get image size
    x = img.size[0]
    
    # While the type width is less than 85% of the 
    # destination image size, keep increasing the
    # size of the type 1 point at a time
    while font.getsize_multiline(text)[0] < x * .85:
        font_size += 1
        font = ImageFont.truetype(face, font_size)
    
    # Return the ImageFont object at correct size
    return font

# Stores the font in "font" variable.
font = make_font(text_image, quote)

# Calculates the quote location.
x, y = text_image.size
type_x, type_y = font.getsize_multiline(quote)

final_x = (x - type_x) / 2
final_y = (y - type_y) / 2.5

# Draws the quote on the image.
draw.multiline_text(
    (final_x, final_y),
    quote,
    (0, 0, 0),
    font = font,
    align = "center"
)

# A function that draws the line at the bottom of a quote, and draws the "Unkown" author text.
def make_border(img, quote, font):
    d = ImageDraw.Draw(img)
    x1, y1, x2, y2 = d.multiline_textbbox((final_x, final_y), quote, font = font, align = 'center')
    x1 = x1 - 20
    y1 = y1 - 70
    x2 = x2 + 20
    y2 = y2 + 70
    d.rectangle([x1, y1, x2, y2], outline = (153, 29, 52), width = 1)
    d.line([x1 + (x2 / 3), y2, x2 - (x / 3), y2], fill = "black", width = 2)
    d.text((x1 + (x2 / 3) + 50, y2 + 50), "Unkown", fill = "black", font = font, spacing = 100)

make_border(text_image, quote, font)

# Finally, saves the image.
text_image.save("../output/greek_quote.jpg", "JPEG")